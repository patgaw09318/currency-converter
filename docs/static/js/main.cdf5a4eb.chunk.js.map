{"version":3,"sources":["StateManager/StateContext.js","StateManager/Actions.js","common/ApiConfig.js","components/CurrenciesList.js","components/RatePanel.js","components/CurrenciesPanel.js","StateManager/Reducer.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","_ref","reducer","initialState","children","react_default","a","createElement","Provider","value","useReducer","useStateValue","useContext","Actions","setPrimaryValue","setPrimaryCurrency","setSecondaryValue","setSecondaryCurrency","setRate","ApiConfig","ExchangeRates","url","apiConfig","cache","setupCache","maxAge","api","axios","create","adapter","sortObject","o","Object","keys","sort","reduce","r","k","CurrenciesList","props","_useStateValue","_useStateValue2","slicedToArray","_useStateValue2$","primary","secondary","dispatch","_useState","useState","currencies","_useState2","data","setData","useEffect","_fetchData","asyncToGenerator","regenerator_default","mark","_callee","result","obj","wrap","_context","prev","next","sent","objectSpread","rates","base","stop","apply","this","arguments","fetchData","isPrimaryCurrency","id","concat","onChange","event","target","primaryCurrency","currency","secondaryCurrency","type","onChangeDefault","defaultCurrency","map","key","index","title","RatePanel","rate","className","date","from","to","abrupt","CurrenciesPanel","isFirstRun","useRef","_primaryValue","_primaryCurrency","_secondaryCurrency","then","response","primaryValue","Decimal","secondaryValue","mul","toDecimalPlaces","toString","dispatchObject","current","step","placeholder","defaultValue","components_CurrenciesList","components_RatePanel","Reducer","state","action","App","StateContext_StateProvider","components_CurrenciesPanel","href","rel","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cdf5a4eb.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\r\nexport const StateContext = createContext();\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\nexport const useStateValue = () => useContext(StateContext);\r\n","const Actions = {\r\n  setPrimaryValue: \"setPrimaryValue\",\r\n  setPrimaryCurrency: \"setPrimaryCurrency\",\r\n  setSecondaryValue: \"setSecondaryValue\",\r\n  setSecondaryCurrency: \"setSecondaryCurrency\",\r\n  setRate: \"setRate\"\r\n};\r\nexport default Actions;\r\n","const ApiConfig = {\r\n  ExchangeRates: {\r\n    url: \"https://api.exchangeratesapi.io/\"\r\n  }\r\n};\r\n\r\nexport default ApiConfig;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { setupCache } from \"axios-cache-adapter\";\r\nimport { useStateValue } from \"../StateManager/StateContext\";\r\nimport Actions from \"../StateManager/Actions\";\r\nimport ApiConfig from \"../common/ApiConfig\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst apiConfig = ApiConfig.ExchangeRates;\r\nconst cache = setupCache({\r\n  maxAge: 15 * 60 * 1000\r\n});\r\nconst api = axios.create({\r\n  adapter: cache.adapter\r\n});\r\nfunction sortObject(o) {\r\n  return Object.keys(o)\r\n    .sort()\r\n    .reduce((r, k) => ((r[k] = o[k]), r), {});\r\n}\r\n\r\nconst CurrenciesList = props => {\r\n  const [{ primary, secondary }, dispatch] = useStateValue();\r\n  const [data, setData] = useState({ currencies: {} });\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const result = await api(apiConfig.url + \"latest\");\r\n      let obj = { ...result.data.rates };\r\n      obj[result.data.base] = 1.0;\r\n      setData({ currencies: sortObject(obj) });\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const isPrimaryCurrency = props.id === \"PrimaryCurrency\";\r\n  const onChangeDefault = value => {\r\n    let type = isPrimaryCurrency\r\n      ? Actions.setPrimaryCurrency\r\n      : Actions.setSecondaryCurrency;\r\n    let dispatchObject = {\r\n      type: type,\r\n      currency: value\r\n    };\r\n    dispatch(dispatchObject);\r\n  };\r\n\r\n  return (\r\n    <select\r\n      id={`${props.id}_list`}\r\n      onChange={event => {\r\n        let value = event.target.value;\r\n        let primaryCurrency = isPrimaryCurrency ? value : primary.currency;\r\n        let secondaryCurrency = isPrimaryCurrency ? secondary.currency : value;\r\n        onChangeDefault(event.target.value);\r\n        props.onChange(primary.value, primaryCurrency, secondaryCurrency);\r\n      }}\r\n      value={props.defaultCurrency}\r\n    >\r\n      {Object.keys(data.currencies).map((key, index) => (\r\n        <option value={key} key={key} title={data.currencies[key]}>\r\n          {key}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\nCurrenciesList.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func\r\n};\r\n\r\nexport default CurrenciesList;\r\n","import React from \"react\";\r\nimport { useStateValue } from \"../StateManager/StateContext\";\r\n\r\nconst RatePanel = () => {\r\n  const [{ rate }] = useStateValue();\r\n  return (\r\n    <div className=\"RatePanel\">\r\n      <div className=\"header\">Rate details</div>\r\n      <br />\r\n      <div>Rate:</div>\r\n      <div className=\"value\">{rate.value}</div>\r\n      <br />\r\n      <div>Date:</div>\r\n      <div className=\"value\">{rate.date}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RatePanel;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport CurrenciesList from \"./CurrenciesList\";\r\nimport { useStateValue } from \"../StateManager/StateContext\";\r\nimport Actions from \"../StateManager/Actions\";\r\nimport ApiConfig from \"../common/ApiConfig\";\r\nimport axios from \"axios\";\r\nimport { setupCache } from \"axios-cache-adapter\";\r\nimport Decimal from \"decimal.js-light\";\r\nimport RatePanel from \"./RatePanel\";\r\n\r\nconst apiConfig = ApiConfig.ExchangeRates;\r\nconst cache = setupCache({\r\n  maxAge: 15 * 60 * 1000\r\n});\r\nconst api = axios.create({\r\n  adapter: cache.adapter\r\n});\r\nasync function fetchData(from, to) {\r\n  return await api(apiConfig.url + `latest?symbols=${to}&base=${from}`);\r\n}\r\n\r\nconst CurrenciesPanel = props => {\r\n  const isFirstRun = useRef(true);\r\n  const [{ primary, secondary }, dispatch] = useStateValue();\r\n  const onChange = (_primaryValue, _primaryCurrency, _secondaryCurrency) => {\r\n    fetchData(_primaryCurrency, _secondaryCurrency).then(response => {\r\n      let data = response.data;\r\n      let primaryValue = new Decimal(_primaryValue || 0);\r\n      let rate = new Decimal(data.rates[_secondaryCurrency]);\r\n      let secondaryValue = primaryValue\r\n        .mul(rate)\r\n        .toDecimalPlaces(2)\r\n        .toString();\r\n      let dispatchObject = {\r\n        type: Actions.setSecondaryValue,\r\n        value: secondaryValue\r\n      };\r\n      dispatch(dispatchObject);\r\n      dispatchObject = {\r\n        type: Actions.setRate,\r\n        rate: {\r\n          value: rate.toDecimalPlaces(2).toString(),\r\n          date: data.date\r\n        }\r\n      };\r\n      dispatch(dispatchObject);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isFirstRun.current) {\r\n      isFirstRun.current = false;\r\n      onChange(primary.value, primary.currency, secondary.currency);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"CurrenciesPanelComponent\">\r\n      <div>\r\n        <input\r\n          id=\"PrimaryValue\"\r\n          type=\"number\"\r\n          step=\"any\"\r\n          placeholder=\"0.00\"\r\n          defaultValue={primary.value}\r\n          onChange={event => {\r\n            let primaryValue = event.target.value;\r\n            let dispatchObject = {\r\n              type: Actions.setPrimaryValue,\r\n              value: primaryValue\r\n            };\r\n            dispatch(dispatchObject);\r\n            onChange(primaryValue, primary.currency, secondary.currency);\r\n          }}\r\n        />\r\n        <CurrenciesList\r\n          id=\"PrimaryCurrency\"\r\n          defaultCurrency={primary.currency}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <div id=\"SecondaryValue\">{secondary.value}</div>\r\n        <CurrenciesList\r\n          id=\"SecondaryCurrency\"\r\n          defaultCurrency={secondary.currency}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n      <RatePanel />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrenciesPanel;\r\n","import Actions from \"./Actions\";\r\nconst Reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case Actions.setPrimaryValue:\r\n      return {\r\n        ...state,\r\n        primary: {\r\n          ...state.primary,\r\n          value: action.value\r\n        }\r\n      };\r\n    case Actions.setPrimaryCurrency:\r\n      return {\r\n        ...state,\r\n        primary: {\r\n          ...state.primary,\r\n          currency: action.currency\r\n        }\r\n      };\r\n    case Actions.setSecondaryValue:\r\n      return {\r\n        ...state,\r\n        secondary: {\r\n          ...state.secondary,\r\n          value: action.value\r\n        }\r\n      };\r\n\r\n    case Actions.setSecondaryCurrency:\r\n      return {\r\n        ...state,\r\n        secondary: {\r\n          ...state.secondary,\r\n          currency: action.currency\r\n        }\r\n      };\r\n\r\n    case Actions.setRate:\r\n      return {\r\n        ...state,\r\n        rate: action.rate\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default Reducer;\r\n","import React from \"react\";\r\nimport CurrenciesPanel from \"./components/CurrenciesPanel\";\r\nimport { StateProvider } from \"./StateManager/StateContext\";\r\nimport Reducer from \"./StateManager/Reducer\";\r\nimport \"./components/Styles.css\";\r\n\r\nconst App = () => {\r\n  const initialState = {\r\n    primary: { currency: \"EUR\", value: \"10\" },\r\n    secondary: { currency: \"USD\", value: \"0\" },\r\n    rate: { value: 0, date: \"\" }\r\n  };\r\n\r\n  return (\r\n    <StateProvider initialState={initialState} reducer={Reducer}>\r\n      <div className=\"App\">\r\n        <div className=\"Title\">Currency converter</div>\r\n        <CurrenciesPanel />\r\n        <footer>\r\n          <div>@2019 Patryk Gawryszewski</div>\r\n          <div>\r\n            <a\r\n              href=\"https://exchangeratesapi.io\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Rates source\r\n            </a>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    </StateProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}